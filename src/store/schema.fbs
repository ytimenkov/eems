namespace eems;

struct ObjectKey {
    id: int64;
}

struct ResourceKey {
    id: int64;
}

table PathKey {
    location: [ubyte] (required);
}

union KeyUnion {
    ObjectKey,
    ResourceKey,
    PathKey,
}

table LibraryKey {
    key: KeyUnion;
}

table Resource {
    location: [ubyte];
    mime_type: [ubyte];
}

table PathData {
    hash: uint64;
    objects: [MediaObjectRef];
}

table ResourceRef {
    ref: [ubyte] (nested_flatbuffer: "LibraryKey", required);
    protocol_info: [ubyte] (required);
}

table MediaObjectRef {
    ref: [ubyte] (nested_flatbuffer: "LibraryKey", required);
}

table MediaContainer {
    objects: [MediaObjectRef];
}

table MediaItem {
    resources: [ResourceRef];
}

union ObjectUnion {
    MediaContainer,
    MediaItem,
}

enum ArtworkType : byte {
    Poster,
    Thumbnail,
}

table Artwork {
    ref: [ubyte] (nested_flatbuffer: "LibraryKey", required);
    type: ArtworkType (key);
}

table MediaObject {
    id: ObjectKey (required);
    parent_id: ObjectKey (required);
    dc_title: [ubyte] (required);
    upnp_class: [ubyte]  (required);
    artwork: [Artwork];
    dc_date: int64;
    data: ObjectUnion;
}

